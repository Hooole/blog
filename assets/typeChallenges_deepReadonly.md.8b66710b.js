import{o as n,c as a,d as s}from"./app.437d6b62.js";const t='{"title":"深度Readonly","description":"","frontmatter":{},"headers":[{"level":3,"title":"深度Readonly","slug":"深度readonly"}],"relativePath":"typeChallenges/deepReadonly.md","lastUpdated":1697187673699}',p={},e=s('<h3 id="深度readonly"><a class="header-anchor" href="#深度readonly" aria-hidden="true">#</a> 深度Readonly</h3><div class="language-javascript"><pre><code>ype <span class="token constant">X</span> <span class="token operator">=</span> <span class="token punctuation">{</span> \n  x<span class="token operator">:</span> <span class="token punctuation">{</span> \n    a<span class="token operator">:</span> <span class="token number">1</span>\n    b<span class="token operator">:</span> <span class="token string">&#39;hi&#39;</span>\n  <span class="token punctuation">}</span>\n  y<span class="token operator">:</span> <span class="token string">&#39;hey&#39;</span>\n<span class="token punctuation">}</span>\n\ntype Expected <span class="token operator">=</span> <span class="token punctuation">{</span> \n  readonly x<span class="token operator">:</span> <span class="token punctuation">{</span> \n    readonly a<span class="token operator">:</span> <span class="token number">1</span>\n    readonly b<span class="token operator">:</span> <span class="token string">&#39;hi&#39;</span>\n  <span class="token punctuation">}</span>\n  readonly y<span class="token operator">:</span> <span class="token string">&#39;hey&#39;</span> \n<span class="token punctuation">}</span>\n\ntype Todo <span class="token operator">=</span> DeepReadonly<span class="token operator">&lt;</span><span class="token constant">X</span><span class="token operator">&gt;</span> <span class="token comment">// should be same as `Expected`</span>\n</code></pre></div><div class="language-javascript"><pre><code>type DeepReadonly<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  readonly <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> keyof <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span><span class="token punctuation">[</span>key<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> any<span class="token punctuation">}</span> <span class="token operator">?</span> DeepReadonly<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre></div><ul><li><code>T[P] extends {[key: string]: any}</code> : 判断是否是一个嵌套对象，如果是则递归调用DeepReadonly</li></ul><p>更完善的实现方式可以参考<a href="https://github.com/vuejs/core/blob/main/packages/reactivity/src/reactive.ts#L145" target="_blank" rel="noopener noreferrer">vuejs中的实现</a></p>',5);p.render=function(s,t,p,o,c,l){return n(),a("div",null,[e])};export default p;export{t as __pageData};
