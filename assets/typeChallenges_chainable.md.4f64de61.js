import{o as n,c as s,d as a}from"./app.437d6b62.js";const t='{"title":"可串联构造器","description":"","frontmatter":{},"headers":[{"level":3,"title":"可串联构造器","slug":"可串联构造器"}],"relativePath":"typeChallenges/chainable.md","lastUpdated":1698819714843}',p={},o=a('<h3 id="可串联构造器"><a class="header-anchor" href="#可串联构造器" aria-hidden="true">#</a> 可串联构造器</h3><div class="language-javascript"><pre><code>\ndeclare <span class="token keyword">const</span> config<span class="token operator">:</span> Chainable\n\n<span class="token keyword">const</span> result <span class="token operator">=</span> config\n  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;type-challenges&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&#39;Hello World&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment">// expect the type of result to be:</span>\n<span class="token keyword">interface</span> <span class="token class-name">Result</span> <span class="token punctuation">{</span>\n  foo<span class="token operator">:</span> number\n  name<span class="token operator">:</span> string\n  bar<span class="token operator">:</span> <span class="token punctuation">{</span>\n    value<span class="token operator">:</span> string\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><div class="language-javascript"><pre><code>type Chainable<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  option<span class="token operator">:</span> <span class="token operator">&lt;</span><span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token class-name">string</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token class-name">keyof</span> <span class="token constant">T</span><span class="token operator">?</span> never <span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token constant">V</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Chainable<span class="token operator">&lt;</span>Omit<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;</span> <span class="token operator">&amp;</span> Record<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',3);p.render=function(a,t,p,e,c,l){return n(),s("div",null,[o])};export default p;export{t as __pageData};
