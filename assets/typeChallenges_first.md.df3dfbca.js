import{o as s,c as n,d as a}from"./app.437d6b62.js";const t='{"title":"第一个元素","description":"","frontmatter":{},"headers":[{"level":3,"title":"第一个元素","slug":"第一个元素"}],"relativePath":"typeChallenges/first.md","lastUpdated":1695720802255}',p={},e=a('<h3 id="第一个元素"><a class="header-anchor" href="#第一个元素" aria-hidden="true">#</a> 第一个元素</h3><div class="language-javascript"><pre><code>type arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span>\ntype arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>\n\ntype head1 <span class="token operator">=</span> First<span class="token operator">&lt;</span>arr1<span class="token operator">&gt;</span> <span class="token comment">// 应推导出 &#39;a&#39;</span>\ntype head2 <span class="token operator">=</span> First<span class="token operator">&lt;</span>arr2<span class="token operator">&gt;</span> <span class="token comment">// 应推导出 3</span>\n</code></pre></div><div class="language-javascript"><pre><code><span class="token comment">// 索引实现方式</span>\ntype First<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">?</span> never <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n<span class="token comment">// 占位实现方式</span>\ntype First<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token operator">&lt;</span>infer <span class="token constant">K</span><span class="token punctuation">,</span> <span class="token operator">...</span>infer <span class="token constant">P</span><span class="token operator">&gt;</span> <span class="token operator">?</span> <span class="token constant">K</span> <span class="token operator">:</span> never\n</code></pre></div><ul><li><code>T extends []</code> 用来判断T是否是一个空数组</li><li><code>T[0]</code> 取数组的第一个元素</li><li><code>infer K</code> 表示数组第一个元素的占位</li><li><code>...infer P</code> 表示数组剩余元素的占位</li></ul>',4);p.render=function(a,t,p,o,c,l){return s(),n("div",null,[e])};export default p;export{t as __pageData};
